<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://f0rb.github.io</id>
    <title>DOYToWin</title>
    <updated>2020-04-20T16:27:55.903Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://f0rb.github.io"/>
    <link rel="self" href="https://f0rb.github.io/atom.xml"/>
    <logo>https://f0rb.github.io/images/avatar.png</logo>
    <icon>https://f0rb.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, DOYToWin</rights>
    <entry>
        <title type="html"><![CDATA[DoytoQuery系列一之核心理念]]></title>
        <id>https://f0rb.github.io/post/doyto-query-1st-core-idea/</id>
        <link href="https://f0rb.github.io/post/doyto-query-1st-core-idea/">
        </link>
        <updated>2020-04-20T15:16:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="先说结论">先说结论：</h3>
<h2 id="sql查询的where语句是可以通过对象生成的">SQL查询的WHERE语句是可以通过对象生成的</h2>
<hr>
<h3 id="接着论证">接着论证</h3>
<ul>
<li>先定义这样一个对象, 假设作如下赋值</li>
</ul>
<pre><code>@Getter
@Setter
public class UserQuery {
     private Integer pageNumber;                // 3
     private Integer pageSize;                  // 10
     private String sort;                       // id,desc;create_time,asc

     private String usernameOrEmailOrMobile;    // admin
     private String nicknameLike;               // 管理员
     private Boolean valid;                     // true
 }
</code></pre>
<ul>
<li>对于usernameOrEmailOrMobile，按Or拆开后分别接上&quot; = ?&quot;，再用&quot; OR &quot;拼接，得到</li>
</ul>
<pre><code>username = ? OR email = ? OR mobile = ?
</code></pre>
<ul>
<li>对于nicknameLike，去掉后缀Like，拼接&quot; LIKE ?&quot;，得到</li>
</ul>
<pre><code>nickame LIKE ?
</code></pre>
<ul>
<li>对于valid，字段名加上&quot;= ?&quot;得到</li>
</ul>
<pre><code>valid = ?
</code></pre>
<ul>
<li>将上述3条语句用&quot; AND &quot;拼接，含OR的语句加括号，再在前面加上&quot;WHERE&quot;，得到</li>
</ul>
<pre><code>WHERE (username = ? OR email = ? OR mobile = ?) AND nickname LIKE ? AND valid = ?
</code></pre>
<ul>
<li>对于sort字段，逗号替换为空格，分号替换为逗号，前面加上&quot;ORDER BY &quot;，得到</li>
</ul>
<pre><code>ORDER BY id DESC, createTime ASC
</code></pre>
<ul>
<li>将pageNumber和pageSize的值代入LIMIT ${pageSize} OFFSET ${(pageNumber - 1) * pageSize}，得到</li>
</ul>
<pre><code>LIMIT 10 OFFSET 20
</code></pre>
<ul>
<li>将上述SELECT, WHERE, ORDER BY, LIMIT语句合并，得到</li>
</ul>
<pre><code>WHERE (username = ? OR email = ? OR mobile = ?) AND nickname LIKE ? AND valid = ?
ORDER BY id DESC, createTime ASC
LIMIT 10 OFFSET 20
</code></pre>
<ul>
<li>同时得到对应的参数列表</li>
</ul>
<pre><code>[&quot;admin&quot;, &quot;admin&quot;, &quot;admin&quot;, &quot;%管理员%&quot;, true]
</code></pre>
<p>其中WHERE语句的过滤条件根据字段是否为null来决定是否拼接。</p>
<p>再来看对应的Entity对象</p>
<pre><code>@Table(name = &quot;t_user&quot;)
public class UserEntity {
    private Integer id;
    private String username;
    private String password;
    private String mobile;
    private String email;
    private Date createTime;
    private Boolean valid;
}
</code></pre>
<ul>
<li>首先把UserEntity的字段全部列出来，得到表列</li>
</ul>
<pre><code>id, username, password, mobile, email, createTime
</code></pre>
<ul>
<li>从@Table注解里得到表名</li>
</ul>
<pre><code>t_user
</code></pre>
<ul>
<li>代入到SELECT [columns] FROM [TABLE]，得到</li>
</ul>
<pre><code>SELECT id, username, password, mobile, email, createTime, valid FROM t_user
</code></pre>
<ul>
<li>再跟上述WHERE语句拼接，即可得到一条完整的查询语句</li>
</ul>
<pre><code>SELECT id, username, password, mobile, email, createTime, valid FROM t_user
WHERE (username = ? OR email = ? OR mobile = ?) AND nickname LIKE ? AND valid = ?
ORDER BY id DESC, createTime ASC
LIMIT 10 OFFSET 20
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://f0rb.github.io/post/hello-gridea/</id>
        <link href="https://f0rb.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>